<?php

namespace App\Controller;

use App\Entity\Figure;
use App\Entity\Visual;
use App\Entity\Comment;
use App\Entity\Category;
use App\Form\FigureType;
use App\Form\UploadType;
use App\Form\VisualType;
use App\Repository\FigureRepository;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;

class TricksController extends AbstractController
{ 
    /**
     *@Route("/", name="home")
     */
    public function home(FigureRepository $repo)
    {        
        $figures = $repo->findAll();

        return $this->render('tricks/home.html.twig', ['figures' => $figures]);
    }

    /**
    * @Route("/tricks/new", name="tricks_create")
    * @Route("/tricks/{slug}/edit", name="tricks_edit")
    */
    public function form(Figure $figure = null, Visual $visual = null, Request $request, ObjectManager $manager)
    {        
        $figure = new Figure();

        $form = $this->createForm(FigureType::class, $figure)->handleRequest($request);
        // $formVisual = $this->createForm(VisualType::class, $visual)->handleRequest($request);

        if($form->isSubmitted() && $form->isValid())
        {
                if(!$figure->getId())
                {
                    $figure->setCreatedAt(new \DateTime());                
                }
                else
                {
                    $figure->setModifiedAt(new \DateTime());
                }

                $figure->setSlug($figure->getTitle());

                $file = $form->get('media')->getData();

                $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();

                // dump($file);
                // dump($fileName);

                $file->move(
                    $this->getParameter('visuals_directory'),
                    $fileName
                );

                $figure->setMedia($filename);

                // $manager->persist($figure);

                $manager->flush();

                // $request->getSession()->getFlashBag()->add('notice', 'Annonce bien enregistrÃ©e.');


                return $this->redirectToRoute('tricks_show', ['slug' => $figure->getSlug()]);
            }

            return $this->render('tricks/create.html.twig', [
                'form' => $form->createView(),
                'editMode' => $figure->getId() !== null,
                ]);
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
    
    /**
     * @Route("/tricks/{slug}", name="tricks_show")
     */
    public function show(Figure $figure = null, Comment $comment = null)
    {     
        return $this->render('tricks/show.html.twig', ['figure' => $figure, 'comments' => $comment]);
    }
}
